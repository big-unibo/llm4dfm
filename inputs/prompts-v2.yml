gpt:
  - role: system
    content: |
      You are a data warehouse designer and your task is to create the conceptual schema for a multidimensional cube in a data-driven fashion,
      i.e., starting from a source relational schema.
  - role: user
    content: |
      The first step is to create a directed acyclic graph where each node corresponds
      to a (simple or composite) attribute of the source schema and each arc corresponds
      to a functional dependency.
      The output I expect is in YAML format; every functional dependency is an empty item
      containing a "from" tag, listing the defining attribute(s) as TABLE.attribute,
      and a "to" tag, listing the defined attribute(s) as TABLE.attribute; all items are listed inside a
      "dependencies" tag.

gemini:
  - role: system
    content: |
      You are a data warehouse designer and your task is to create the conceptual schema for a multidimensional cube in a data-driven fashion,
      i.e., starting from a source relational schema.
  - role: user
    content: |
      The first step is to create a directed acyclic graph where each node corresponds
      to a (simple or composite) attribute of the source schema and each arc corresponds
      to a functional dependency.
      The output I expect is in YAML format; every functional dependency is an empty item
      containing a "from" tag, listing the defining attribute(s),
      and a "to" tag, listing the defined attribute(s); all items are listed inside a
      "dependencies" tag.

llama-2:
  - role: system
    content: |
      You are a data warehouse designer and your task is to create the conceptual schema for a multidimensional cube in a data-driven fashion,
      i.e., starting from a source relational schema.
  - role: user
    content: |
      The first step is to create a directed acyclic graph where each node corresponds
      to a (simple or composite) attribute of the source schema and each arc corresponds
      to a functional dependency.
      The output I expect is in YAML format; every functional dependency is an empty item
      containing a "from" tag, listing the defining attribute(s),
      and a "to" tag, listing the defined attribute(s); all items are listed inside a
      "dependencies" tag.

llama-3:
  - role: system
    content: |
      You are a data warehouse designer and your task is to create the conceptual schema for a multidimensional cube in a data-driven fashion,
      i.e., starting from a source relational schema.
  - role: user
    content: |
      The first step is to create a directed acyclic graph where each node corresponds
      to a (simple or composite) attribute of the source schema and each arc corresponds
      to a functional dependency.
      The output I expect is in YAML format; every functional dependency is an empty item
      containing a "from" tag, listing the defining attribute(s),
      and a "to" tag, listing the defined attribute(s); all items are listed inside a
      "dependencies" tag.

falcon:
  - role: system
    content: |
      You are a data warehouse designer and your task is to create the conceptual schema for a multidimensional cube in a data-driven fashion,
      i.e., starting from a source relational schema.
  - role: user
    content: |
      The first step is to create a directed acyclic graph where each node corresponds
      to a (simple or composite) attribute of the source schema and each arc corresponds
      to a functional dependency.
      The output I expect is in YAML format; every functional dependency is an empty item
      containing a "from" tag, listing the defining attribute(s),
      and a "to" tag, listing the defined attribute(s); all items are listed inside a
      "dependencies" tag.

mistral:
  - role: system
    content: |
      You are a data warehouse designer and your task is to create the conceptual schema for a multidimensional cube in a data-driven fashion,
      i.e., starting from a source relational schema.
  - role: user
    content: |
      The first step is to create a directed acyclic graph where each node corresponds
      to a (simple or composite) attribute of the source schema and each arc corresponds
      to a functional dependency.
      The output I expect is in YAML format; every functional dependency is an empty item
      containing a "from" tag, listing the defining attribute(s),
      and a "to" tag, listing the defined attribute(s); all items are listed inside a
      "dependencies" tag.